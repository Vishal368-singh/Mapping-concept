import {
  a as a5,
  c as c2,
  n as n7,
  r as r3
} from "./chunk-NTJZG5SJ.js";
import {
  e as e4
} from "./chunk-OG3NOYNK.js";
import {
  n as n6,
  p as p2
} from "./chunk-HL4MMPM2.js";
import {
  t
} from "./chunk-GMOHWJKF.js";
import {
  n as n5
} from "./chunk-ZYWMFOAJ.js";
import {
  i as i2
} from "./chunk-XDYK4UML.js";
import "./chunk-HVRIX7CX.js";
import {
  f as f4,
  s as s4,
  u as u2
} from "./chunk-GCTIF24Q.js";
import "./chunk-D245JBVP.js";
import {
  p
} from "./chunk-RXG6HQCK.js";
import {
  e as e3
} from "./chunk-MULZ6YKT.js";
import {
  O,
  c,
  e as e2
} from "./chunk-466GPKNY.js";
import {
  n2 as n3
} from "./chunk-ICGEJRKY.js";
import "./chunk-FNXTTV6Z.js";
import "./chunk-IXG2DG4Y.js";
import {
  s as s3
} from "./chunk-ALYXSRKO.js";
import "./chunk-ZTUZVYUT.js";
import "./chunk-FV6ZNHFI.js";
import {
  f as f2
} from "./chunk-OETYRBST.js";
import {
  d as d3
} from "./chunk-2JMCZ3BT.js";
import {
  q
} from "./chunk-7D32HQWD.js";
import "./chunk-Z7YG4UNG.js";
import "./chunk-2CS746FZ.js";
import "./chunk-6YSDDH6K.js";
import {
  a as a4
} from "./chunk-MCOL2MI5.js";
import {
  g
} from "./chunk-AVMLDZZZ.js";
import {
  m as m3
} from "./chunk-IQQJPZC6.js";
import {
  m as m2
} from "./chunk-B5AZBN2H.js";
import "./chunk-C6OAHV3Z.js";
import "./chunk-FSYN2HHU.js";
import "./chunk-UYERGX5D.js";
import "./chunk-BTVDNPEM.js";
import "./chunk-3U5B3VOX.js";
import "./chunk-ZAUL2HRL.js";
import "./chunk-FOPBVVXE.js";
import {
  n as n4
} from "./chunk-MHZNPCC3.js";
import "./chunk-5ZJMLCBK.js";
import "./chunk-QUZZIDFR.js";
import "./chunk-XNUSHDFN.js";
import "./chunk-D4S6H6HS.js";
import "./chunk-4AKMPOG7.js";
import {
  V
} from "./chunk-IDSV3U3M.js";
import "./chunk-2CJBZZN7.js";
import "./chunk-N7OU5PYY.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-3LTBYQQS.js";
import {
  C as C2
} from "./chunk-YXZLRZNZ.js";
import "./chunk-YVNZKO6I.js";
import {
  h,
  j,
  l
} from "./chunk-27M3EN5Y.js";
import {
  C
} from "./chunk-DQBIAKCW.js";
import "./chunk-MOMLPET6.js";
import {
  o
} from "./chunk-P5FXO7WR.js";
import "./chunk-UCCG5WDW.js";
import "./chunk-SDIBXPSJ.js";
import {
  d as d2
} from "./chunk-WAXP6XIO.js";
import {
  P
} from "./chunk-IVKSCXGN.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-DDNC6A36.js";
import "./chunk-ZJQPHR3K.js";
import {
  z
} from "./chunk-T6TMEQJ7.js";
import {
  _,
  j as j2
} from "./chunk-5DBBCQVU.js";
import "./chunk-MNW46TV4.js";
import {
  f as f3
} from "./chunk-JSWMPOBX.js";
import "./chunk-SSVCVBFL.js";
import {
  Z
} from "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-5KQMTKIZ.js";
import {
  l as l2
} from "./chunk-PYBAZ6YE.js";
import "./chunk-YC5GI5YQ.js";
import {
  a as a3,
  b as b2,
  m,
  r as r2
} from "./chunk-RJI4N3LT.js";
import {
  a2
} from "./chunk-QSG5WGQI.js";
import {
  w
} from "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import {
  n as n2
} from "./chunk-CM3TIXEV.js";
import {
  r
} from "./chunk-Y4BWIIWH.js";
import {
  R
} from "./chunk-3TN73U7K.js";
import "./chunk-SL5A7INV.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import {
  H,
  n
} from "./chunk-YO7WHZZ7.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-JNYZ3I5R.js";
import {
  A,
  b,
  d,
  e2 as e,
  f,
  u2 as u,
  y
} from "./chunk-Q6OL33PY.js";
import {
  a,
  i3 as i,
  s,
  s2
} from "./chunk-TJPLHZCD.js";
import {
  L,
  has
} from "./chunk-KLFJ5V5G.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/widgets/Search/css.js
var o2 = "esri-search";
var e5 = { base: o2, autocomplete: `${o2}__autocomplete`, dropdown: `${o2}__dropdown`, container: `${o2}__container`, form: `${o2}__form` };

// node_modules/@arcgis/core/widgets/Search/searchResultRendererCSS.js
var e6 = "esri-search-result-renderer";
var r4 = { base: e6, moreResults: `${e6}--more-results` };

// node_modules/@arcgis/core/widgets/Search/SearchSource.js
var r5 = class extends n4.IdentifiableMixin(l2) {
  constructor(o4) {
    super(o4), this.autoNavigate = null, this.filter = null, this.getResults = null, this.getSuggestions = null, this.maxResults = null, this.maxSuggestions = null, this.minSuggestCharacters = null, this.outFields = null, this.placeholder = "", this.popupEnabled = null, this.popupTemplate = null, this.prefix = "", this.resultGraphicEnabled = null, this.resultSymbol = null, this.suggestionsEnabled = null, this.suffix = "", this.withinViewEnabled = false, this.zoomScale = null;
  }
};
r([m()], r5.prototype, "autoNavigate", void 0), r([m()], r5.prototype, "filter", void 0), r([m()], r5.prototype, "getResults", void 0), r([m()], r5.prototype, "getSuggestions", void 0), r([m()], r5.prototype, "maxResults", void 0), r([m()], r5.prototype, "maxSuggestions", void 0), r([m()], r5.prototype, "minSuggestCharacters", void 0), r([m()], r5.prototype, "outFields", void 0), r([m()], r5.prototype, "placeholder", void 0), r([m()], r5.prototype, "popupEnabled", void 0), r([m({ type: q })], r5.prototype, "popupTemplate", void 0), r([m()], r5.prototype, "prefix", void 0), r([m()], r5.prototype, "resultGraphicEnabled", void 0), r([m()], r5.prototype, "resultSymbol", void 0), r([m()], r5.prototype, "suggestionsEnabled", void 0), r([m()], r5.prototype, "suffix", void 0), r([m()], r5.prototype, "withinViewEnabled", void 0), r([m()], r5.prototype, "zoomScale", void 0), r5 = r([a2("esri.widgets.Search.SearchSource")], r5);
var l3 = r5;

// node_modules/@arcgis/core/widgets/Search/support/layerSearchUtils.js
var d4 = /https?:\/\/services.*\.arcgis\.com/i;
var f5 = /(?:\{([^}]+)\})/g;
var m4 = () => i.getLogger("esri.widgets.Search.support.layerSearchUtils");
function p3(t2, r6) {
  const { exactMatch: i6 = false, location: l8, maxResults: o4, spatialReference: s5, source: u5, sourceIndex: a10, suggestResult: c6, view: d9 } = t2, { layer: f10, filter: p7, zoomScale: g5 } = u5, b4 = d9?.scale, L3 = y2(u5, d9), R3 = r6?.signal;
  return x(f10).then((() => {
    const e9 = f10.popupTemplate;
    return e9 ? e9.getRequiredFields(f10.fieldsIndex) : null;
  })).then(((t3) => {
    const { objectIdField: r7, returnZ: y5 } = f10, x3 = S(u5);
    if (!I(f10, x3)) throw m4().error("invalid-field: displayField is invalid."), new s2("getResults():invalid-field", "displayField is invalid.");
    const C5 = t3?.length ? t3 : [x3], E2 = u5.outFields || C5, D2 = h2(E2);
    E2.includes(r7) || D2 || E2.push(r7), f10.floorInfo?.floorField && E2.push(f10.floorInfo.floorField);
    if (!(D2 || j3(f10, E2))) throw m4().error("invalid-field: outField is invalid."), new s2("getResults():invalid-field", "outField is invalid.");
    const A3 = f10.createQuery(), { orderByFields: N2 } = u5;
    if (N2 && (A3.orderByFields = N2), s5) {
      A3.outSpatialReference = s5;
      const e9 = 1 / Z(s5);
      e9 && (A3.maxAllowableOffset = e9);
    }
    const k2 = "mesh" === f10.geometryType || "multipatch" === f10.geometryType, O3 = f10.capabilities?.data?.supportsZ && !k2;
    if (A3.returnZ = O3 && false !== y5, A3.returnGeometry = true, A3.multipatchOption = k2 ? "xyFootprint" : null, E2 && (A3.outFields = E2), l8) A3.geometry = l8;
    else if (c6.key) A3.objectIds = [c6.key];
    else {
      const t4 = u5.searchFields || [x3];
      if (!j3(f10, t4)) throw m4().error("invalid-field: search field is invalid."), new s2("getResults():invalid-field", "search field is invalid.");
      T(f10) && (A3.num = o4), L3 && (A3.geometry = L3);
      const r8 = c6.text?.trim();
      if (!r8) return [];
      const n13 = c6.text, { prefix: l9 = "", suffix: s6 = "" } = u5, a11 = q2(`${l9}${n13}${s6}`);
      $(f10) && v(f10, t4) && !i6 && n13 && (A3.fullText = w2({ text: n13, searchFields: t4 }));
      const d10 = M({ searchTerm: a11, layer: f10, searchFields: t4, filter: p7, exactMatch: i6, query: A3, type: "search" });
      if (A3.where = d10, !F(A3)) return [];
    }
    return f10.queryFeatures(A3, { signal: R3 }).then(((e9) => Z2(e9, d9, u5, a10, x3, b4, g5)));
  }));
}
function g2(t2, r6) {
  const { source: i6, spatialReference: n13, view: l8, suggestTerm: o4, maxSuggestions: s5, sourceIndex: u5, exactMatch: a10 } = t2, { layer: c6, filter: d9 } = i6, p7 = r6?.signal, g5 = y2(i6, l8);
  return x(c6).then((() => {
    if (!T(c6)) return [];
    const t3 = S(i6), r7 = i6.searchFields || [t3], l9 = [];
    i6.suggestionTemplate ? i6.suggestionTemplate.replaceAll(f5, ((e9, t4) => (l9.push(t4), e9))) : l9.push(t3);
    const y5 = h2(l9);
    l9.includes(c6.objectIdField) || y5 || l9.push(c6.objectIdField);
    const x3 = I(c6, t3), b4 = y5 || j3(c6, l9), L3 = j3(c6, r7);
    if (!x3) throw m4().error("invalid-field: displayField is invalid."), new s2("getSuggestions():invalid-field", "displayField is invalid.");
    if (!b4) throw m4().error("invalid-field: outField is invalid."), new s2("getSuggestions():invalid-field", "outField is invalid.");
    if (!L3) throw m4().error("invalid-field: search field is invalid."), new s2("getSuggestions():invalid-field", "search field is invalid.");
    const R3 = c6.createQuery(), { orderByFields: C5 } = i6;
    C5 && (R3.orderByFields = C5), R3.outSpatialReference = n13, R3.returnGeometry = false, R3.num = s5, R3.outFields = l9, g5 && (R3.geometry = g5);
    if (!o4.trim()) return [];
    const { prefix: E2 = "", suffix: D2 = "" } = i6, A3 = q2(`${E2}${o4}${D2}`);
    $(c6) && v(c6, r7) && !a10 && o4 && (R3.fullText = w2({ text: o4, searchFields: r7 }));
    const N2 = M({ searchTerm: A3, layer: c6, searchFields: r7, filter: d9, exactMatch: a10, query: R3, type: "suggest" });
    return R3.where = N2, F(R3) ? c6.queryFeatures(R3, { signal: p7 }).then(((e9) => B(e9, i6, u5, t3))) : [];
  }));
}
function y2(e9, t2) {
  const { filter: r6, withinViewEnabled: i6 } = e9, n13 = t2?.extent, l8 = r6?.geometry;
  return l8 ?? (i6 && n13 ? n13 : void 0);
}
function h2(e9) {
  return e9 && e9.includes("*");
}
async function x(e9) {
  e9 && await e9.load();
}
function F(e9) {
  return !(!e9.fullText && !e9.where);
}
function v(e9, t2) {
  const r6 = e9?.indexes;
  if (!r6 || !t2?.length) return false;
  return r6.filter(((e10) => "FullText" === e10.indexType)).some(((e10) => {
    const r7 = e10.fields?.split(",").map(((e11) => e11.trim().toLowerCase())) || [];
    return t2.every(((e11) => r7.includes(e11.toLowerCase())));
  }));
}
function w2({ text: e9, searchFields: t2 }) {
  return e9.trim().split(" ").filter(((e10) => !!e10.trim())).map(((e10) => new p({ onFields: t2, searchTerm: e10, searchType: "prefix" })));
}
function $(e9) {
  return e9?.capabilities?.query?.supportsFullTextSearch ?? false;
}
function T(e9) {
  return e9?.capabilities?.query?.supportsPagination ?? false;
}
function b3(e9) {
  return e9?.fieldsIndex?.fields?.find(((e10) => "string" === e10.type))?.name ?? "";
}
function S(e9) {
  return e9.displayField || e9.layer.displayField || b3(e9.layer);
}
function j3(e9, t2) {
  return !(!e9 || !t2?.length) && t2.every(((t3) => I(e9, t3)));
}
function I(e9, t2) {
  return !!e9.getField(t2);
}
function L2(e9) {
  for (let t2 = 0; t2 < e9.length; t2++) if (e9.charCodeAt(t2) > 255) return true;
  return false;
}
function R2({ codedValues: e9 }, t2, r6) {
  return f(e9 ?? [], ((e10) => {
    const i6 = e10.name, n13 = r6 ? i6 : i6.toLowerCase();
    return (r6 ? t2 : t2.toLowerCase()) === n13 ? e10.code.toString() : null;
  })) ?? null;
}
function q2(e9) {
  return e9.replaceAll("'", "''");
}
function C3(e9, t2) {
  const r6 = t2?.where;
  return r6 ? `(${e9}) AND (${r6})` : e9;
}
function E({ currentTerm: e9, field: t2, filter: r6, exactMatch: i6, url: n13, type: l8 }) {
  const o4 = t2?.type, s5 = t2?.name;
  if ("string" === o4 || "date" === o4 || "global-id" === o4) {
    const t3 = d4.test(n13 ?? ""), o5 = t3 && L2(e9) ? "N" : "";
    if (i6 && "search" === l8) return C3(`${s5} = ${o5}'${e9}'`, r6);
    if (t3) {
      return C3(`${s5} LIKE ${o5}${`'${e9}%'`}`, r6);
    }
    return C3(`${`LOWER(${s5})`} LIKE ${o5}${`'${e9.toLowerCase()}%'`}`, r6);
  }
  if ("oid" === o4 || "small-integer" === o4 || "integer" === o4 || "single" === o4 || "double" === o4) {
    const t3 = Number(e9);
    return isNaN(t3) ? null : C3(`${s5} = ${t3}`, r6);
  }
  return C3(`${s5} = ${e9}`, r6);
}
function D(e9, t2) {
  return e9 ? ` OR (${t2})` : `(${t2})`;
}
function M({ searchTerm: e9, layer: t2, searchFields: r6, filter: i6, exactMatch: n13, query: l8, type: o4 }) {
  const { definitionExpression: s5, url: u5 } = t2;
  let a10 = "";
  return !l8.fullText && e9 && r6 && r6.forEach(((r7) => {
    const l9 = t2.getField(r7), s6 = t2.getFieldDomain?.(r7, { excludeImpliedDomains: has("esri-widget-legacy-field-domain-calculation") }), c6 = (s6 && "coded-value" === s6.type ? R2(s6, e9, n13) : null) || e9 || null;
    if (null !== c6) {
      const e10 = E({ currentTerm: c6, field: l9, filter: i6, exactMatch: n13, url: u5, type: o4 });
      e10 && (a10 += D(a10, e10));
    }
  })), s5 && a10 ? `(${s5}) AND (${a10})` : s5 || a10;
}
function A2(e9, t2) {
  let r6 = null;
  const { codedValues: i6 } = e9;
  return i6 && i6.length && i6.some(((e10) => e10.code === t2 && (r6 = e10.name, true))), r6;
}
function N(e9, t2) {
  return e9[t2] ?? e9[Object.keys(e9).find(((e10) => e10.toLowerCase() === t2.toLowerCase()))];
}
function k(e9, t2, r6) {
  const i6 = e9.sourceLayer, { attributes: n13 } = e9, l8 = i6.getFieldDomain?.(r6, { feature: e9, excludeImpliedDomains: has("esri-widget-legacy-field-domain-calculation") });
  if (t2) return s3(t2, n13);
  if (r6 && n13) {
    const e10 = i6.getField(r6), t3 = N(n13, r6);
    return null == t3 ? "" : l8 && "coded-value" === l8.type ? A2(l8, t3) ?? "" : "date" === e10?.type ? C(new Date(t3)) : "number" == typeof t3 ? t3.toString() : "string" != typeof t3 ? "" : t3.trim();
  }
  return "";
}
function O2(e9, t2, r6, i6) {
  const n13 = e9.sourceLayer, { attributes: l8 } = e9, { objectIdField: o4 } = n13, s5 = o4 ? l8[o4] : null;
  return { text: k(e9, t2.suggestionTemplate, i6), key: s5, sourceIndex: r6 };
}
function B(e9, t2, r6, i6) {
  return e9.features.map(((e10) => O2(e10, t2, r6, i6)));
}
function U(e9) {
  return null != e9 && null != e9.minScale && null != e9.maxScale;
}
function V2(e9, r6, i6, n13, u5, a10, c6) {
  const d9 = e9.clone();
  d9.layer = e9.layer;
  const f10 = e9.sourceLayer, m8 = f10?.objectIdField, p7 = m8 ? e9.attributes[m8] : null, g5 = k(e9, i6.searchTemplate, u5);
  null != a10 && U(f10) && (f10.minScale && f10.minScale < a10 ? a10 = f10.minScale : f10.maxScale && f10.maxScale > a10 && (a10 = f10.maxScale));
  const y5 = d9.geometry ? c2(d9.geometry, r6 ?? void 0, a10 ?? void 0) : void 0, h6 = "number" == typeof c6 && y5 ? a5(a(y5), r6 ?? void 0, c6) : y5, x3 = e9.clone();
  return x3.layer = e9.layer, null != h6 && (x3.geometry = P.fromExtent(h6)), { extent: h6, target: x3, feature: d9, key: p7, name: g5, sourceIndex: n13 };
}
function Z2(e9, t2, r6, i6, n13, l8, o4) {
  return e9.features.map(((e10) => V2(e10, t2, r6, i6, n13, l8, o4)));
}

// node_modules/@arcgis/core/widgets/Search/LayerSearchSource.js
var o3;
var h3 = o3 = class extends l3 {
  constructor(e9) {
    super(e9), this.displayField = null, this.exactMatch = null, this.orderByFields = null, this.searchFields = null, this.searchTemplate = null, this.suggestionTemplate = null, this.getResults = (e10, t2) => p3({ source: this, ...e10 }, t2), this.getSuggestions = (e10, t2) => g2({ source: this, ...e10 }, t2);
  }
  set layer(e9) {
    this._set("layer", e9), e9 && e9.load().catch((() => {
    }));
  }
  get name() {
    return this._getLayerTitle() ?? "";
  }
  set name(e9) {
    this._overrideIfSome("name", e9);
  }
  clone() {
    return new o3({ autoNavigate: this.autoNavigate, filter: this.filter, maxResults: this.maxResults, maxSuggestions: this.maxSuggestions, minSuggestCharacters: this.minSuggestCharacters, outFields: this.outFields ? a(this.outFields) : null, placeholder: this.placeholder, popupEnabled: this.popupEnabled, prefix: this.prefix, resultGraphicEnabled: this.resultGraphicEnabled, resultSymbol: this.resultSymbol ? this.resultSymbol.clone() : null, suggestionsEnabled: this.suggestionsEnabled, suffix: this.suffix, withinViewEnabled: this.withinViewEnabled, displayField: this.displayField, exactMatch: this.exactMatch, layer: this.layer, searchFields: this.searchFields ? a(this.searchFields) : null, suggestionTemplate: this.suggestionTemplate, zoomScale: this.zoomScale });
  }
  _getFirstStringField() {
    return this.layer.fieldsIndex?.fields.find(((e9) => "string" === e9.type))?.name ?? "";
  }
  _getDisplayField() {
    return this.displayField || this.layer.displayField || this._getFirstStringField();
  }
  _getSearchFieldsString() {
    const { layer: e9, searchFields: t2 } = this;
    if (!e9.loaded) return "";
    return `: ${(t2 || [this._getDisplayField()]).map(((t3) => {
      const s5 = e9.getField(t3);
      return s5?.alias || t3;
    })).join(", ")}`;
  }
  _getLayerTitle() {
    const { layer: e9 } = this;
    if (!e9) return;
    const { title: t2 } = e9;
    return t2 ? `${t2}${this._getSearchFieldsString()}` : void 0;
  }
};
r([m({ json: { read: { source: "field.name" }, write: { target: "field.name" } } })], h3.prototype, "displayField", void 0), r([m({ json: { read: { source: "field.exactMatch" }, write: { target: "field.exactMatch" } } })], h3.prototype, "exactMatch", void 0), r([m({ value: null })], h3.prototype, "layer", null), r([m()], h3.prototype, "name", null), r([m({ type: [String], json: { write: true } })], h3.prototype, "orderByFields", void 0), r([m()], h3.prototype, "searchFields", void 0), r([m()], h3.prototype, "searchTemplate", void 0), r([m()], h3.prototype, "suggestionTemplate", void 0), h3 = o3 = r([a2("esri.widgets.Search.LayerSearchSource")], h3);
var n8 = h3;

// node_modules/@arcgis/core/rest/locator/utils.js
function e7(e9) {
  return !!e9 && "number" == typeof e9.x && "number" == typeof e9.y;
}
function n9(e9) {
  return e9 && "number" == typeof e9.xmin && "number" == typeof e9.ymin && "number" == typeof e9.xmax && "number" == typeof e9.ymax;
}

// node_modules/@arcgis/core/rest/support/AddressCandidate.js
var i3 = class extends l2 {
  constructor(t2) {
    super(t2), this.address = null, this.attributes = null, this.extent = null, this.location = null, this.score = null;
  }
};
r([m({ type: String, json: { write: true } })], i3.prototype, "address", void 0), r([m({ type: Object, json: { write: true } })], i3.prototype, "attributes", void 0), r([m({ type: z, json: { write: true } })], i3.prototype, "extent", void 0), r([m({ type: _, json: { write: true } })], i3.prototype, "location", void 0), r([m({ type: Number, json: { write: true } })], i3.prototype, "score", void 0), i3 = r([a2("esri.rest.support.AddressCandidate")], i3);
var c3 = i3;

// node_modules/@arcgis/core/rest/support/AddressToLocationsParameters.js
var l4 = class extends l2 {
  constructor(o4) {
    super(o4), this.address = null, this.apiKey = null, this.categories = null, this.countryCode = null, this.forStorage = null, this.location = null, this.locationType = null, this.magicKey = null, this.maxLocations = null, this.outFields = null, this.outSpatialReference = null, this.searchExtent = null;
  }
};
r([m({ type: Object, json: { write: true } })], l4.prototype, "address", void 0), r([m(t)], l4.prototype, "apiKey", void 0), r([m({ type: [String], json: { read: { source: "category", reader: (o4) => o4 ? o4.split(",") : null }, write: { target: "category", writer: (o4, t2) => {
  t2.category = o4 ? o4.join(",") : null;
} } } })], l4.prototype, "categories", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "countryCode", void 0), r([m({ type: Boolean, json: { write: true } })], l4.prototype, "forStorage", void 0), r([m({ type: _, json: { write: { writer: (o4, t2) => {
  t2.location = o4 ? o4.clone().normalize() : null;
} } } })], l4.prototype, "location", void 0), r([m({ type: ["rooftop", "street"], json: { write: true } })], l4.prototype, "locationType", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "magicKey", void 0), r([m({ type: Number, json: { write: true } })], l4.prototype, "maxLocations", void 0), r([m({ type: [String], json: { write: { writer: (o4, t2) => {
  t2.outFields = o4 ? o4.join(",") : null;
} } } })], l4.prototype, "outFields", void 0), r([m({ type: f3, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], l4.prototype, "outSpatialReference", void 0), r([m({ type: z, json: { write: { writer: (o4, t2) => {
  const e9 = o4 ? o4.shiftCentralMeridian() : null;
  t2.searchExtent = e9;
} } } })], l4.prototype, "searchExtent", void 0), l4 = r([a2("esri.rest.support.AddressToLocationsParameters")], l4), l4.from = w(l4);
var c4 = l4;

// node_modules/@arcgis/core/rest/locator/addressToLocations.js
async function d5(o4, n13, a10) {
  n13 = c4.from(n13);
  const d9 = f4(o4), { address: p7, ...m8 } = n13.toJSON(), u5 = { ...p7, ...m8, f: "json" }, c6 = u2({ ...d9.query, ...u5 }), j6 = s4(c6, a10), l8 = `${d9.path}/findAddressCandidates`;
  return H(l8, j6).then(f6);
}
function f6({ data: r6 }) {
  if (!r6) return [];
  const { candidates: t2, spatialReference: e9 } = r6;
  return t2 ? t2.map(((r7) => {
    if (!r7) return;
    const { extent: t3, location: s5 } = r7, i6 = !t3 || n9(t3);
    return e7(s5) && i6 ? (t3 && (t3.spatialReference = e9), s5 && (s5.spatialReference = e9), c3.fromJSON(r7)) : void 0;
  })) : [];
}

// node_modules/@arcgis/core/rest/support/LocationToAddressParameters.js
var a6 = class extends l2 {
  constructor(o4) {
    super(o4), this.apiKey = null, this.location = null, this.locationType = null, this.outSpatialReference = null;
  }
};
r([m(t)], a6.prototype, "apiKey", void 0), r([m({ type: _, json: { write: { writer: (o4, r6) => {
  const t2 = o4 ? o4.clone().normalize() : null, e9 = void 0 !== t2;
  r6.location = e9 ? t2 : null;
} } } })], a6.prototype, "location", void 0), r([m({ type: ["street", "rooftop"], json: { write: true } })], a6.prototype, "locationType", void 0), r([m({ type: f3, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], a6.prototype, "outSpatialReference", void 0), a6 = r([a2("esri.rest.support.LocationToAddressParameters")], a6), a6.from = w(a6);
var n10 = a6;

// node_modules/@arcgis/core/rest/locator/locationToAddress.js
async function n11(e9, n13, i6) {
  n13 = n10.from(n13);
  const c6 = f4(e9), m8 = { ...n13.toJSON(), f: "json" }, u5 = u2({ ...c6.query, ...m8 }), f10 = s4(u5, i6), p7 = `${c6.path}/reverseGeocode`;
  return H(p7, f10).then(d6);
}
function d6({ data: r6 }) {
  if (!r6) return;
  const { address: o4, location: t2 } = r6, s5 = o4?.Match_addr || "";
  return c3.fromJSON({ address: s5, attributes: o4 || {}, location: t2, score: 100 });
}

// node_modules/@arcgis/core/rest/support/SuggestionCandidate.js
var e8 = class extends l2 {
  constructor(o4) {
    super(o4), this.isCollection = null, this.magicKey = null, this.text = null;
  }
};
r([m({ type: Boolean, json: { write: true } })], e8.prototype, "isCollection", void 0), r([m({ type: String, json: { write: true } })], e8.prototype, "magicKey", void 0), r([m({ type: String, json: { write: true } })], e8.prototype, "text", void 0), e8 = r([a2("esri.rest.support.SuggestionCandidate")], e8);
var i4 = e8;

// node_modules/@arcgis/core/rest/support/SuggestLocationsParameters.js
var c5 = class extends l2 {
  constructor(t2) {
    super(t2), this.apiKey = null, this.categories = null, this.countryCode = null, this.location = null, this.maxSuggestions = null, this.outSpatialReference = null, this.searchExtent = null, this.text = null;
  }
};
r([m(t)], c5.prototype, "apiKey", void 0), r([m({ type: [String], json: { read: { source: "category", reader: (t2) => t2 ? t2.split(",") : null }, write: { target: "category", writer: (t2, o4) => {
  o4.category = t2 ? t2.join(",") : null;
} } } })], c5.prototype, "categories", void 0), r([m({ type: String, json: { write: true } })], c5.prototype, "countryCode", void 0), r([m({ type: _, json: { write: { writer: (t2, o4) => {
  o4.location = t2 ? t2.clone().normalize() : null;
} } } })], c5.prototype, "location", void 0), r([m({ type: Number, json: { write: true } })], c5.prototype, "maxSuggestions", void 0), r([m({ type: f3, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], c5.prototype, "outSpatialReference", void 0), r([m({ type: z, json: { write: { writer: (t2, o4) => {
  const e9 = t2 ? t2.shiftCentralMeridian() : null;
  o4.searchExtent = JSON.stringify(e9);
} } } })], c5.prototype, "searchExtent", void 0), r([m({ type: String, json: { write: true } })], c5.prototype, "text", void 0), c5 = r([a2("esri.rest.support.SuggestLocationsParameters")], c5), c5.from = w(c5);
var l5 = c5;

// node_modules/@arcgis/core/rest/locator/suggestLocations.js
async function u3(n13, u5, m8) {
  const p7 = f4(n13), a10 = { ...(u5 = l5.from(u5)).toJSON(), f: "json" }, f10 = u2({ ...p7.query, ...a10 }), g5 = s4(f10, m8), c6 = `${p7.path}/suggest`;
  return H(c6, g5).then(i5);
}
function i5(t2) {
  const { data: o4 } = t2;
  if (!o4) return [];
  const { suggestions: r6 } = o4;
  return r6 ? r6.map(((t3) => new i4(t3))) : [];
}

// node_modules/@arcgis/core/widgets/Search/support/locatorUtils.js
var l6 = "Single Line Input";
var d7 = 3e5;
function m5(e9, t2) {
  return e9.location ? S2(e9, t2) : h4(e9, t2);
}
function f7(e9, t2) {
  if (t2.localSearchDisabled) return null;
  const o4 = e9?.scale;
  return "number" == typeof o4 && o4 <= d7 ? e9?.extent?.center : null;
}
async function p4(e9, t2) {
  const { source: o4, spatialReference: r6, view: n13, suggestTerm: s5, maxSuggestions: c6, sourceIndex: a10 } = e9, l8 = new l5(), { apiKey: d9, url: m8 } = o4, p7 = w3(o4, n13), g5 = t2?.signal;
  if (!m8) return null;
  d9 && (l8.apiKey = d9), o4.categories && (l8.categories = o4.categories), r6 && (l8.outSpatialReference = r6);
  const y5 = f7(n13, o4);
  y5 && (l8.location = y5);
  if (!s5.trim()) return null;
  const { prefix: x3 = "", suffix: v4 = "" } = o4, S3 = `${x3}${s5}${v4}`;
  return l8.text = S3, p7 && (l8.searchExtent = p7), l8.maxSuggestions = c6, o4.countryCode && (l8.countryCode = o4.countryCode), u3(m8, l8, { signal: g5 }).then(((e10) => I2(e10, a10)));
}
function g3(e9) {
  return !!e9 && /(?:geocode-api\.arcgis\.com\/arcgis\/rest\/services\/world\/geocodeserver).*/i.test(e9);
}
function y3(e9) {
  return !!e9 && /(?:\/servers\/[\da-z.-]+\/rest\/services\/world\/geocodeserver).*/i.test(e9);
}
function x2(e9) {
  return !!e9 && /(?:arcgis\.com\/arcgis\/rest\/services\/world\/geocodeserver).*/i.test(e9);
}
var v2 = "https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer";
async function S2(e9, t2) {
  const { source: o4, spatialReference: r6, location: n13, sourceIndex: i6, view: c6 } = e9, { apiKey: u5, url: l8, zoomScale: d9, defaultZoomScale: m8 } = o4;
  if (null == l8) return [];
  const f10 = c6?.scale, p7 = t2?.signal, g5 = new n10({ location: n13 });
  u5 && (g5.apiKey = u5), r6 && (g5.outSpatialReference = r6);
  try {
    return K([await n11(l8, g5, { signal: p7 })], { sourceIndex: i6, scale: f10, view: c6, zoomScale: d9, defaultZoomScale: m8 });
  } catch (y5) {
    return [];
  }
}
function w3(e9, t2) {
  const { filter: r6, withinViewEnabled: n13 } = e9, s5 = t2?.scale, i6 = t2?.extent, c6 = r6?.geometry;
  return (c6 ? c2(c6, t2 ?? void 0, s5) : void 0) || (n13 && i6 ? i6 : void 0);
}
async function h4(e9, t2) {
  const { source: o4, suggestResult: r6, spatialReference: s5, view: i6, maxResults: a10, sourceIndex: u5 } = e9, d9 = o4?.zoomScale, m8 = o4?.defaultZoomScale, p7 = r6.text?.trim();
  if (!p7) return null;
  const g5 = !r6.key && o4.prefix ? o4.prefix : "", y5 = !r6.key && o4.suffix ? o4.suffix : "", x3 = `${g5}${r6.text}${y5}`, v4 = new c4(), { apiKey: S3, url: h6 } = o4, j6 = i6?.scale, I3 = w3(o4, i6), $3 = t2?.signal;
  if (S3 && (v4.apiKey = S3), !h6) return null;
  o4.categories && (v4.categories = o4.categories), o4.locationType && (v4.locationType = o4.locationType), s5 && (v4.outSpatialReference = s5);
  const L3 = f7(i6, o4);
  L3 && (v4.location = L3), v4.maxLocations = a10, I3 && (v4.searchExtent = I3), o4.countryCode && (v4.countryCode = o4.countryCode);
  const { key: R3 } = r6, T2 = `${R3}`;
  return R3 && (v4.magicKey = T2), v4.address = {}, v4.address[o4.singleLineFieldName || l6] = x3, o4.outFields && (v4.outFields = o4.outFields), d5(h6, v4, { signal: $3 }).then(((e10) => K(e10, { key: T2, scale: j6, sourceIndex: u5, view: i6, zoomScale: d9, defaultZoomScale: m8 })));
}
function j4(e9, t2) {
  return { text: e9.text, key: e9.magicKey, sourceIndex: t2 };
}
function I2(e9, t2) {
  return e9.map(((e10) => j4(e10, t2)));
}
function $2(n13, s5) {
  const { key: i6, scale: c6, sourceIndex: a10, view: u5, zoomScale: l8, defaultZoomScale: d9 } = s5, { attributes: m8, extent: f10, location: p7, address: g5 } = n13, y5 = new d3({ geometry: p7, attributes: m8 }), x3 = f10 || p7, v4 = x3 ? c2(x3, u5 ?? void 0, c6 ?? void 0) : void 0, S3 = v4 ? "number" == typeof l8 ? a5(v4, u5 ?? void 0, l8) : "number" == typeof d9 && "point" === x3?.type ? a5(v4, u5 ?? void 0, d9) : v4 : null, w4 = p7 ? `${p7.x},${p7.y}` : "", h6 = g5 || w4, j6 = y5.clone();
  return null != S3 && (j6.geometry = P.fromExtent(S3)), { extent: S3, feature: y5, target: j6, key: i6, name: h6, sourceIndex: a10 };
}
function K(e9, t2) {
  return e9.filter(Boolean).map(((e10) => $2(e10, t2)));
}

// node_modules/@arcgis/core/widgets/Search/LocatorSearchSource.js
var a7;
var p5 = a7 = class extends l3 {
  constructor(e9) {
    super(e9), this.apiKey = null, this.categories = null, this.countryCode = null, this.defaultZoomScale = null, this.localSearchDisabled = false, this.locationType = null, this.name = "", this.placeholder = "", this.searchTemplate = "", this.singleLineFieldName = null, this.suggestionsEnabled = null, this.url = null, this.zoomScale = null, this.getResults = (e10, t2) => m5({ source: this, ...e10 }, t2), this.getSuggestions = (e10, t2) => p4({ source: this, ...e10 }, t2);
  }
  clone() {
    return new a7({ apiKey: this.apiKey, autoNavigate: this.autoNavigate, filter: this.filter, maxResults: this.maxResults, maxSuggestions: this.maxSuggestions, minSuggestCharacters: this.minSuggestCharacters, outFields: this.outFields ? a(this.outFields) : null, placeholder: this.placeholder, popupEnabled: this.popupEnabled, prefix: this.prefix, resultGraphicEnabled: this.resultGraphicEnabled, resultSymbol: this.resultSymbol ? this.resultSymbol.clone() : null, suggestionsEnabled: this.suggestionsEnabled, suffix: this.suffix, withinViewEnabled: this.withinViewEnabled, categories: this.categories ? a(this.categories) : null, countryCode: this.countryCode, locationType: this.locationType, searchTemplate: this.searchTemplate, singleLineFieldName: this.singleLineFieldName, zoomScale: this.zoomScale });
  }
};
r([m()], p5.prototype, "apiKey", void 0), r([m()], p5.prototype, "categories", void 0), r([m()], p5.prototype, "countryCode", void 0), r([m({ json: { write: true } })], p5.prototype, "defaultZoomScale", void 0), r([m()], p5.prototype, "localSearchDisabled", void 0), r([m()], p5.prototype, "locationType", void 0), r([m({ json: { write: true } })], p5.prototype, "name", void 0), r([m({ json: { write: true } })], p5.prototype, "placeholder", void 0), r([m()], p5.prototype, "searchTemplate", void 0), r([m({ json: { write: true } })], p5.prototype, "singleLineFieldName", void 0), r([m({ json: { read: { source: "suggest" }, write: { target: "suggest" } } })], p5.prototype, "suggestionsEnabled", void 0), r([m({ json: { write: true } })], p5.prototype, "url", void 0), r([m({ json: { write: true } })], p5.prototype, "zoomScale", void 0), p5 = a7 = r([a2("esri.widgets.Search.LocatorSearchSource")], p5);
var n12 = p5;

// node_modules/@arcgis/core/widgets/support/geolocationUtils.js
var u4 = () => i.getLogger("esri.widgets.support.geolocationUtils");
var a8 = { maximumAge: 0, timeout: 15e3, enableHighAccuracy: true };
function m6() {
  const e9 = !!has("esri-geolocation");
  return e9 || u4().warn("geolocation-unsupported", "Geolocation unsupported."), e9;
}
function l7() {
  const e9 = window.isSecureContext;
  return e9 || u4().warnOnce("insecure-context", "Geolocation requires a secure origin."), e9;
}
function g4() {
  return m6() && l7();
}
function p6(e9) {
  const o4 = 15e3;
  return e9 ??= a8, new Promise(((r6, i6) => {
    setTimeout((() => i6(new s2("geolocation:timeout", "getting the current geolocation position timed out"))), o4), navigator.geolocation.getCurrentPosition(r6, i6, e9 ?? void 0);
  }));
}
var d8;
function f8(e9, o4) {
  if (d8) return d8(e9, o4);
  const { position: r6, view: i6 } = e9, n13 = v3(r6), c6 = n13?.coords;
  if (!c6) throw new s2("geometry-service:no-coords", "Geolocation has no coordinates");
  return h5(y4(c6), i6, o4);
}
function v3(e9) {
  const t2 = e9 && e9.coords || {}, o4 = { accuracy: t2.accuracy, altitude: t2.altitude, altitudeAccuracy: t2.altitudeAccuracy, heading: t2.heading, latitude: t2.latitude, longitude: t2.longitude, speed: t2.speed, toJSON: () => ({}) };
  return e9 ? { coords: o4, timestamp: e9.timestamp, toJSON: () => ({}) } : e9;
}
function y4({ longitude: e9, latitude: t2, altitude: o4 }) {
  return new _({ longitude: e9, latitude: t2, z: o4 || void 0, spatialReference: { wkid: 4326 } });
}
function h5(e9, o4, r6) {
  if (!o4) return Promise.resolve(e9);
  const n13 = o4.spatialReference;
  return n13.isWGS84 ? Promise.resolve(e9) : n13.isWebMercator ? Promise.resolve(j2(e9)) : j5(r6).then(((o5) => {
    if (!o5) throw new s2("geometry-service:missing-url", "Geometry service URL is missing");
    const i6 = new p2({ geometries: [e9], outSpatialReference: n13 });
    return n6(o5, i6, r6).then(((e10) => e10[0]));
  }));
}
function j5(t2) {
  if (s.geometryServiceUrl) return Promise.resolve(s.geometryServiceUrl);
  const o4 = C2.getDefault();
  return o4.load(t2).catch((() => {
  })).then((() => o4.helperServices?.geometry?.url));
}

// node_modules/@arcgis/core/widgets/Search/SearchViewModel.js
function U2(e9, t2) {
  return e9.hasOwnProperty(t2) && null != e9[t2] && "" !== e9[t2];
}
var H2 = () => f2("esri/widgets/Search/t9n/Search");
var B2 = "highlight";
var Q = V.ofType({ key: (e9) => e9.layer ? "layer" : "locator", base: l3, typeMap: { layer: n8, locator: n12 } });
var Z3 = f3.WGS84;
var q3 = "esri/images/search/search-symbol-32.png";
var z2 = /<[\s\S]*?>/g;
var K2 = -1;
var _a;
var W = (_a = class extends i2(o.EventedMixin(b2)) {
  constructor(e9) {
    super(e9), this._gotoController = null, this._searching = null, this._updatingPromise = null, this._createdFeatureLayers = [], this.autoNavigate = true, this.autoSelect = true, this.defaultPopupTemplate = null, this.defaultSources = new Q(), this.defaultSymbols = { point: new a4({ url: n2(q3), size: 24, width: 24, height: 24 }), polyline: new m2({ color: [130, 130, 130, 1], width: 2 }), polygon: new m3({ color: [235, 235, 235, 0.4], outline: { color: [130, 130, 130, 1], width: 2 } }) }, this.includeDefaultSources = true, this.maxInputLength = 128, this.maxResults = 6, this.maxSuggestions = 6, this.messages = null, this.minSuggestCharacters = 3, this.popupEnabled = true, this.popupTemplate = null, this.portal = C2.getDefault(), this.resultCount = null, this.resultGraphicEnabled = true, this.resultGraphic = null, this.results = null, this.selectedSuggestion = null, this.searchAllEnabled = true, this.selectedResult = null, this.sources = new Q(), this.suggestionDelay = 350, this.suggestionCount = null, this.suggestions = null, this.suggestionsEnabled = true, this.view = null;
  }
  initialize() {
    const e9 = async () => {
      const e10 = await H2();
      this.messages = e10, this.defaultPopupTemplate = new q({ title: e10.searchResult, content: "{Match_addr}" });
    };
    e9(), this.addHandles([l((() => [this.includeDefaultSources, this.view, this.portal]), (() => this._update()), h), d2(e9)]);
  }
  destroy() {
    this._destroyFeatureLayers(), this._abortGoTo(), this.clearGraphics();
  }
  get activeSource() {
    return this.allSources.at(this.activeSourceIndex) ?? null;
  }
  get activeSourceIndex() {
    return 1 === this.allSources.length || !this.searchAllEnabled ? 0 : K2;
  }
  set activeSourceIndex(e9) {
    this._overrideIfSome("activeSourceIndex", e9);
  }
  get allPlaceholder() {
    return this.messages?.allPlaceholder;
  }
  set allPlaceholder(e9) {
    this._overrideIfSome("allPlaceholder", e9);
  }
  get allSources() {
    const { sources: e9, defaultSources: t2, includeDefaultSources: r6 } = this, s5 = "function" == typeof r6 ? r6.call(null, { sources: e9, defaultSources: t2 }) : r6 ? t2.concat(e9) : e9, o4 = this._get("allSources") || new Q();
    return o4.removeAll(), o4.addMany(s5.filter(Boolean)), o4;
  }
  get locationEnabled() {
    return this._get("locationEnabled") || g4();
  }
  set locationEnabled(e9) {
    if (void 0 === e9) return void this._clearOverride("locationEnabled");
    const t2 = g4();
    if (e9 && !t2) {
      const e10 = new s2("locationEnabled:geolocation-unsupported", "Geolocation API is unsupported.", { geolocation: navigator.geolocation });
      i.getLogger(this).error(e10);
    }
    this._override("locationEnabled", !!e9 && t2);
  }
  get placeholder() {
    const { allSources: e9, activeSourceIndex: t2, allPlaceholder: r6 } = this;
    if (t2 === K2) return r6 ?? "";
    const s5 = e9.at(t2);
    return s5?.placeholder ?? "";
  }
  set searchTerm(e9) {
    this._set("searchTerm", e9 || ""), this.clearGraphics(), this.selectedSuggestion && this.selectedSuggestion.text !== e9 && this._set("selectedSuggestion", null), "" === e9 && this._clear();
  }
  get searchTerm() {
    return this._get("searchTerm") || "";
  }
  get state() {
    return this._searching ? "searching" : this.updating ? "loading" : 0 === this.allSources.length ? "disabled" : "ready";
  }
  get updating() {
    return null != this._updatingPromise;
  }
  clear() {
    this.searchTerm = "";
  }
  clearGraphics() {
    this._removeHighlight(), this._closePopup();
    const { view: e9, resultGraphic: t2 } = this;
    e9 && t2 && e9.graphics.remove(t2), this._set("resultGraphic", null);
  }
  search(e9, t2) {
    this.emit("search-start"), this.clearGraphics();
    const r6 = this._createSuggestionForSearch(e9), s5 = (async () => {
      try {
        await this.when();
        const e10 = await this._getResultsFromSources(r6, t2);
        if (t2?.signal?.aborted) return null;
        const s6 = { activeSourceIndex: this.activeSourceIndex, searchTerm: r6.text ?? "", numResults: 0, numErrors: 0, errors: [], results: [] };
        this._formatResponse(s6, e10, r6);
        const o4 = this._getFirstResult(s6.results), i6 = r6.location && o4 ? o4.name : r6.text, l8 = i6?.replace(z2, "");
        return this._set("searchTerm", l8), (r6.key && "number" == typeof r6.sourceIndex || r6.location) && this._set("selectedSuggestion", r6), this._set("results", s6.results), this._set("resultCount", s6.results.reduce(((e11, t3) => e11 + (t3.results?.length ?? 0)), 0)), this.emit("search-complete", s6), await this._selectFirstResult(o4), s6;
      } finally {
        this._clearSearching();
      }
    })();
    return this._searching = s5, s5;
  }
  async searchNearby(e9) {
    if (!this.locationEnabled) {
      const e10 = new s2("searchNearby:geolocation-unsupported", "Geolocation API is unsupported.", { geolocation: navigator.geolocation });
      throw i.getLogger(this).error(e10), e10;
    }
    const t2 = (async () => {
      try {
        const t3 = await p6(), r6 = await f8({ position: t3, view: this.view }, e9);
        return await this.search(r6, e9);
      } finally {
        this._clearSearching();
      }
    })();
    return this._searching = t2, t2;
  }
  async select(e9) {
    if (this.clearGraphics(), !e9) {
      const t3 = new s2("select:missing-parameter", "Cannot select without a searchResult.", { searchResult: e9 });
      throw i.getLogger(this).error(t3), t3;
    }
    const { view: t2 } = this, s5 = U2(e9, "sourceIndex") ? e9.sourceIndex : this._getSourceIndexOfResult(e9), o4 = null != s5 ? this.allSources.at(s5) : null;
    if (!o4) {
      const e10 = new s2("select:missing-source", "Cannot select without a source.", { source: o4 });
      throw i.getLogger(this).error(e10), e10;
    }
    const i6 = o4 instanceof n8 ? this._getLayerSourcePopupTemplate(o4) : o4.popupTemplate, l8 = o4.resultSymbol || this._getDefaultSymbol(e9), n13 = U2(o4, "resultGraphicEnabled") ? o4.resultGraphicEnabled : this.resultGraphicEnabled, c6 = U2(o4, "autoNavigate") ? o4.autoNavigate : this.autoNavigate, p7 = U2(o4, "popupEnabled") ? o4.popupEnabled : this.popupEnabled, g5 = p7 ? i6 || this.popupTemplate || this.defaultPopupTemplate : null, { feature: d9 } = e9;
    if (!d9) {
      const e10 = new s2("select:missing-feature", "Cannot select without a feature.", { feature: d9 });
      throw i.getLogger(this).error(e10), e10;
    }
    const { attributes: m8, geometry: y5, layer: f10, sourceLayer: S3 } = d9, _2 = y5 ? n7(y5) : null, b4 = { layerViewQuery: this._getLayerView(d9), elevationQuery: t2 && null != _2 ? r3(_2, t2) : Promise.resolve(_2) }, x3 = await y(b4), L3 = x3.layerViewQuery.value, I3 = x3.elevationQuery.value;
    l8 instanceof g && (l8.text = e9.name);
    const T2 = t2 && c6 ? e9.target || e9.extent : null, R3 = null != T2 ? this._goToSearchResult(T2) : Promise.resolve();
    await R3;
    const E2 = L3 ? d9 : new d3({ geometry: y5, symbol: l8, attributes: m8, layer: f10, sourceLayer: S3, popupTemplate: g5 }), C5 = t2?.popup, G = C5 && p7 && E2.getEffectivePopupTemplate(C5.defaultPopupTemplateEnabled);
    return G && await t2.openPopup({ features: [E2], location: I3 }), L3 && n5(L3) && !G && this._highlightFeature({ graphic: E2, layerView: L3 }), !L3 && n13 && t2 && t2.graphics.push(E2), this._setResultFloor(e9), this._set("selectedResult", e9), this._set("resultGraphic", E2), this.emit("select-result", { result: e9, source: o4, sourceIndex: s5 }), e9;
  }
  async suggest(e9, t2, r6) {
    const s5 = e9 || this.searchTerm;
    this.emit("suggest-start", { searchTerm: s5 }), await this._suggestTimer(t2, r6);
    const o4 = await this._suggestImmediate(s5, r6);
    return this._set("suggestions", o4?.results), this._set("suggestionCount", o4?.results.reduce(((e10, t3) => e10 + (t3.results?.length ?? 0)), 0) ?? null), this.emit("suggest-complete", o4), o4;
  }
  async when() {
    await j((() => !this.updating));
  }
  async _update() {
    const { portal: e9, view: t2 } = this;
    if (this.includeDefaultSources) {
      const r6 = this._updatingPromise = y([e9?.load(), t2?.when()]);
      if (this.destroyed) return;
      if (await r6, r6 !== this._updatingPromise) return;
    }
    await j((() => this.messages)), this.destroyed || this._updateDefaultSources(), this._updatingPromise = null;
  }
  _clearSearching() {
    this._searching = null;
  }
  _convertHelperServices() {
    const e9 = this.portal?.helperServices?.geocode;
    if (!e9) return [];
    return e9.map(((e10) => {
      if (false === e10.placefinding) return;
      const t2 = x2(e10.url) && n(e10.url) ? { url: v2 } : null, r6 = n12.fromJSON({ ...e10, ...t2 }), s5 = r6.url;
      if (x2(s5) || y3(s5) || g3(s5)) {
        const e11 = r6.outFields ?? ["Addr_type", "Match_addr", "StAddr", "City"], t3 = (r6.placeholder || this.messages?.placeholder) ?? "", s6 = "number" == typeof r6.defaultZoomScale ? r6.defaultZoomScale : 2500;
        r6.singleLineFieldName = "SingleLine", r6.outFields = e11, r6.placeholder = t3, r6.defaultZoomScale = s6;
      }
      return r6.singleLineFieldName ? r6 : void 0;
    })).filter(L);
  }
  _destroyFeatureLayers() {
    this._createdFeatureLayers.forEach(((e9) => e9?.destroy())), this._createdFeatureLayers = [];
  }
  _getLayerSources(e9, t2) {
    const r6 = this.view?.map;
    return e9.map(((e10) => {
      const s5 = r6.findLayerById(e10.id);
      if (!s5) return;
      const o4 = this._getLayerJSON(e10), i6 = n8.fromJSON(o4);
      return i6.placeholder = t2, this._getLayer(s5, o4).then(((e11) => {
        i6.layer = e11;
      })), i6;
    })).filter(L).toArray();
  }
  _getTableSources(e9, t2) {
    const r6 = this.view?.map;
    return e9.map(((e10) => {
      if (!e10.id) return;
      const s5 = r6.findTableById(e10.id);
      if (!s5) return;
      const o4 = this._getLayerJSON(e10), i6 = n8.fromJSON(o4);
      return i6.placeholder = t2, this._getLayer(s5, o4).then(((e11) => {
        i6.layer = e11;
      })), i6;
    })).filter(L).toArray();
  }
  _convertApplicationProperties() {
    const e9 = this.view?.map, t2 = e9?.applicationProperties?.viewing?.search;
    if (!t2) return [];
    const { enabled: r6, hintText: s5, layers: o4, tables: i6 } = t2;
    if (!r6) return [];
    return [...this._getLayerSources(o4, s5), ...this._getTableSources(i6, s5)];
  }
  async _getSubLayer(e9, t2) {
    if (await e9.load(), !e9.allSublayers) throw new Error();
    const r6 = e9.allSublayers.find(((e10) => e10.id === t2.subLayer));
    if (!r6) throw new Error();
    const s5 = await r6.createFeatureLayer?.();
    if (!s5) throw new Error();
    return this._createdFeatureLayers.push(s5), s5;
  }
  async _getBuildingSubLayer(e9, t2) {
    await e9.load();
    const r6 = e9.allSublayers.find(((e10) => e10.id === t2.subLayer));
    if ("building-component" !== r6?.type) throw new Error();
    if (await r6.load(), null == r6.associatedLayer) throw new Error();
    return await r6.associatedLayer.load(), r6;
  }
  async _getLayer(e9, t2) {
    if ("feature" === e9.type || "scene" === e9.type || "csv" === e9.type || "geojson" === e9.type || "ogc-feature" === e9.type) return e9;
    if ("map-image" === e9.type) try {
      return await this._getSubLayer(e9, t2);
    } catch (r6) {
      const t3 = new s2("search:create-featurelayer", "Could not create a FeatureLayer from the MapImageLayer", { layer: e9 });
      return i.getLogger(this).error(t3), null;
    }
    return "building-scene" === e9.type ? this._getBuildingSubLayer(e9, t2) : null;
  }
  _getLayerJSON(e9) {
    return "function" == typeof e9.toJSON ? e9.toJSON() : e9;
  }
  _updateDefaultSources() {
    const { defaultSources: e9, includeDefaultSources: t2 } = this;
    this._destroyFeatureLayers(), e9.removeAll(), t2 && e9.addMany([...this._convertApplicationProperties(), ...this._convertHelperServices()]);
  }
  _abortGoTo() {
    this._gotoController && this._gotoController.abort(), this._gotoController = null;
  }
  _clear() {
    this._abortGoTo(), this._set("resultCount", null), this._set("results", null), this._set("suggestions", null), this._set("suggestionCount", null), this._set("selectedResult", null), this._set("selectedSuggestion", null), this.emit("search-clear");
  }
  _closePopup() {
    const e9 = this.view?.popup, { resultGraphic: t2 } = this;
    if (!e9 || !t2) return;
    const r6 = "selectedFeature" in e9, s5 = r6 ? e9.selectedFeature : null;
    r6 && (s5 && s5 === t2) && e9.close();
  }
  _suggestTimer(e9, t2) {
    const r6 = null != e9 ? e9 : this.suggestionDelay;
    return A(r6, null, t2?.signal);
  }
  _createLocationForSearch(e9) {
    return e9 instanceof d3 && e9.geometry ? n7(e9.geometry) : e9 instanceof _ ? e9 : Array.isArray(e9) && 2 === e9.length ? new _({ longitude: e9[0], latitude: e9[1] }) : null;
  }
  _createSuggestionForSearch(e9) {
    if (e9 && U2(e9, "key") && U2(e9, "text") && U2(e9, "sourceIndex")) return e9;
    const t2 = this._createLocationForSearch(e9), r6 = "string" == typeof e9 ? e9 : this.searchTerm, { selectedSuggestion: s5, selectedResult: o4 } = this, i6 = !e9 && s5 && o4, l8 = i6 && s5.key === o4.key && s5.sourceIndex === o4.sourceIndex, a10 = i6 && s5.location;
    return l8 || a10 ? s5 : { location: t2, text: t2 ? "" : r6, sourceIndex: null, key: null };
  }
  _getFirstResult(e9) {
    return f(e9, (({ results: e10 }) => e10?.[0])) ?? null;
  }
  async _selectFirstResult(e9) {
    return this.autoSelect && e9 ? this.select(e9) : null;
  }
  async _suggestImmediate(e9, t2) {
    await this.when();
    const r6 = await this._getSuggestionsFromSources(e9, t2);
    if (t2?.signal?.aborted) return null;
    const s5 = { activeSourceIndex: this.activeSourceIndex, searchTerm: e9 ?? "", numResults: 0, numErrors: 0, errors: [], results: [] };
    return this._formatResponse(s5, r6), s5;
  }
  _formatSourceResponse(e9, t2, r6) {
    const s5 = t2?.value || [], o4 = t2?.error, i6 = this.allSources.at(r6);
    if (o4) {
      const t3 = { sourceIndex: r6, source: i6, error: o4 };
      e9.errors.push(t3), i.getLogger(this).error(o4), e9.numErrors++;
    } else {
      const t3 = { sourceIndex: r6, source: i6, results: s5 };
      e9.results.push(t3), e9.numResults += s5.length;
    }
  }
  _formatResponse(e9, t2, r6) {
    if (t2) if (e9.activeSourceIndex === K2) {
      const s5 = r6 && U2(r6, "sourceIndex") && -1 !== r6.sourceIndex ? r6.sourceIndex : void 0;
      t2.forEach(((t3, r7) => {
        const o4 = void 0 !== s5 ? s5 : r7;
        this._formatSourceResponse(e9, t3, o4);
      }));
    } else this._formatSourceResponse(e9, t2[0], e9.activeSourceIndex);
  }
  async _getResultsFromSources(e9, t2) {
    const { allSources: r6 } = this, s5 = !e9.location && U2(e9, "sourceIndex") ? e9.sourceIndex : this.activeSourceIndex, o4 = [];
    if (!r6.length) {
      const e10 = new s2("search:no-sources-defined", "At least one source is required.", { allSources: r6 });
      throw i.getLogger(this).error(e10), e10;
    }
    return s5 === K2 ? r6.forEach(((r7, s6) => {
      o4.push(this._getResultsFromSource(e9, s6, t2));
    })) : o4.push(this._getResultsFromSource(e9, s5, t2)), y(o4);
  }
  async _getSuggestionsFromSources(e9, t2) {
    const { allSources: r6, activeSourceIndex: s5 } = this, o4 = [];
    if (!r6.length) {
      const e10 = new s2("suggest:no-sources-defined", "At least one source is required.", { allSources: r6 });
      throw i.getLogger(this).error(e10), e10;
    }
    return s5 === K2 ? r6.forEach(((r7, s6) => {
      o4.push(this._getSuggestionsFromSource(e9, s6, t2));
    })) : o4.push(this._getSuggestionsFromSource(e9, s5, t2)), y(o4);
  }
  async _getResultsFromSource(e9, t2, r6) {
    const s5 = null != t2 ? this.allSources.at(t2) : null;
    if (!s5) return null;
    const { location: o4 = null } = e9, i6 = this.view?.spatialReference || Z3, l8 = U2(s5, "maxResults") ? s5.maxResults : this.maxResults, a10 = !!(s5 instanceof n8 && U2(s5, "exactMatch")) && s5.exactMatch, { view: n13 } = this;
    return s5.getResults?.({ view: n13, sourceIndex: t2, location: o4, suggestResult: e9, spatialReference: i6, exactMatch: a10, maxResults: l8 }, r6);
  }
  async _getSuggestionsFromSource(e9, t2, r6) {
    const s5 = this.allSources.at(t2);
    if (!s5) return null;
    e9 ??= "";
    const o4 = U2(s5, "suggestionsEnabled") ? s5.suggestionsEnabled : this.suggestionsEnabled, i6 = e9?.length, l8 = U2(s5, "minSuggestCharacters") ? s5.minSuggestCharacters : this.minSuggestCharacters;
    if (o4 && e9.trim() && i6 >= l8) {
      const o5 = this.view?.spatialReference || Z3, i7 = U2(s5, "maxSuggestions") ? s5.maxSuggestions : this.maxSuggestions, { view: l9 } = this, a10 = !!(s5 instanceof n8 && U2(s5, "exactMatch")) && s5.exactMatch;
      return s5.getSuggestions?.({ view: l9, sourceIndex: t2, suggestTerm: e9, spatialReference: o5, maxSuggestions: i7, exactMatch: a10 }, r6);
    }
    return null;
  }
  _getLayerSourcePopupTemplate(e9) {
    const { layer: t2 } = e9;
    if (t2) return U2(e9, "popupTemplate") ? e9.popupTemplate : t2.popupTemplate;
  }
  _getSourceIndexOfResult(e9) {
    return f(this.results ?? [], (({ results: t2, sourceIndex: r6 }) => {
      const s5 = t2?.includes(e9);
      return s5 ? r6 : null;
    })) ?? null;
  }
  async _goToSearchResult(e9) {
    this._abortGoTo();
    const t2 = new AbortController();
    this._gotoController = t2;
    const r6 = { target: { target: e9 }, options: { signal: t2.signal } };
    e9 || (r6.options.animate = false), await this.callGoTo(r6), this._gotoController = null;
  }
  _getDefaultSymbol(e9) {
    const { defaultSymbols: t2 } = this, r6 = e9.feature?.geometry;
    if (null == r6) return null;
    switch (r6.type) {
      case "point":
      case "multipoint":
        return t2.point;
      case "polyline":
        return t2.polyline;
      case "extent":
      case "polygon":
        return t2.polygon;
      default:
        return null;
    }
  }
  _removeHighlight() {
    this.removeHandles(B2);
  }
  async _getLayerView(e9) {
    const { view: t2 } = this;
    if (!e9 || !t2) return null;
    const { layer: r6, sourceLayer: s5 } = e9, o4 = r6 ?? s5;
    return o4 && "building-component" !== o4.type && "subtype-sublayer" !== o4.type ? (await t2.when(), t2.whenLayerView(o4)) : null;
  }
  _highlightFeature(e9) {
    const { graphic: t2, layerView: r6 } = e9, { attributes: s5, layer: o4, sourceLayer: i6 } = t2, l8 = o4 ?? i6, { objectIdField: a10 } = l8, n13 = (a10 && s5?.[a10]) ?? null, u5 = r6.highlight(n13 ?? t2);
    this.addHandles(u5, B2);
  }
  _setResultFloor(e9) {
    const { view: t2 } = this, r6 = e9.feature?.attributes, s5 = e9.feature?.sourceLayer;
    if (s5 && "floorInfo" in s5 && s5?.floorInfo?.floorField && r6) {
      const e10 = r6[s5.floorInfo.floorField];
      t2?.emit("select-result-floor", e10);
    }
  }
}, _a.ALL_INDEX = K2, _a);
r([m()], W.prototype, "_searching", void 0), r([m()], W.prototype, "_updatingPromise", void 0), r([m({ readOnly: true, value: null })], W.prototype, "activeSource", null), r([m()], W.prototype, "activeSourceIndex", null), r([m()], W.prototype, "allPlaceholder", null), r([m({ readOnly: true })], W.prototype, "allSources", null), r([m()], W.prototype, "autoNavigate", void 0), r([m()], W.prototype, "autoSelect", void 0), r([m({ type: q })], W.prototype, "defaultPopupTemplate", void 0), r([m({ readOnly: true })], W.prototype, "defaultSources", void 0), r([m()], W.prototype, "defaultSymbols", void 0), r([m()], W.prototype, "includeDefaultSources", void 0), r([m()], W.prototype, "locationEnabled", null), r([m()], W.prototype, "maxInputLength", void 0), r([m()], W.prototype, "maxResults", void 0), r([m()], W.prototype, "maxSuggestions", void 0), r([m()], W.prototype, "messages", void 0), r([m()], W.prototype, "minSuggestCharacters", void 0), r([m({ readOnly: true })], W.prototype, "placeholder", null), r([m()], W.prototype, "popupEnabled", void 0), r([m({ type: q })], W.prototype, "popupTemplate", void 0), r([m({ type: C2 })], W.prototype, "portal", void 0), r([m()], W.prototype, "resultCount", void 0), r([m()], W.prototype, "resultGraphicEnabled", void 0), r([m({ readOnly: true })], W.prototype, "resultGraphic", void 0), r([m({ readOnly: true })], W.prototype, "results", void 0), r([m({ readOnly: true })], W.prototype, "selectedSuggestion", void 0), r([m()], W.prototype, "searchAllEnabled", void 0), r([m({ readOnly: true })], W.prototype, "selectedResult", void 0), r([m()], W.prototype, "searchTerm", null), r([m({ type: Q })], W.prototype, "sources", void 0), r([m({ readOnly: true })], W.prototype, "state", null), r([m()], W.prototype, "suggestionDelay", void 0), r([m()], W.prototype, "suggestionCount", void 0), r([m({ readOnly: true })], W.prototype, "suggestions", void 0), r([m()], W.prototype, "suggestionsEnabled", void 0), r([m({ readOnly: true })], W.prototype, "updating", null), r([m()], W.prototype, "view", void 0), r([m()], W.prototype, "clear", null), W = r([a2("esri.widgets.Search.SearchViewModel")], W);
var X = W;

// node_modules/@arcgis/core/widgets/Search/SearchResultRenderer.js
var m7 = class extends O {
  constructor(e9, s5) {
    super(e9, s5), this.messages = null, this.showMoreResultsOpen = false, this.viewModel = null;
  }
  loadDependencies() {
    return c({ block: () => import("./calcite-block-SWJOPTXX.js"), list: () => import("./calcite-list-XFVCKEJA.js"), "list-item": () => import("./calcite-list-item-DSNVAE4G.js"), "list-item-group": () => import("./calcite-list-item-group-DVZ3XYRX.js") });
  }
  destroy() {
    this.viewModel = null;
  }
  render() {
    return n3("div", { class: this.classes(r4.base, e3.widget) }, this.viewModel?.selectedResult?.name ?? "", this._renderMoreResults());
  }
  _renderMoreResults() {
    if (!this.viewModel) return null;
    const { resultCount: e9, results: s5 } = this.viewModel;
    return !e9 || e9 < 2 || !s5 ? null : n3("calcite-block", { class: r4.moreResults, collapsible: true, expanded: this.showMoreResultsOpen, heading: s3(this.messages.showMoreResults, { count: e9 - 1 }), onCalciteBlockClose: () => this._toggleShowMoreResults(false), onCalciteBlockOpen: () => this._toggleShowMoreResults(true) }, s5.map(((e10) => this._renderMoreResultsList(e10, s5?.length > 1))));
  }
  _renderListItem(e9) {
    return n3("calcite-list-item", { key: `result-${e9.sourceIndex}-${e9.key}`, label: e9.name, onCalciteListItemSelect: () => this._selectResult(e9) });
  }
  _renderMoreResultsList(e9, s5) {
    const { results: t2 } = e9;
    if (!(t2?.length ?? 0) || !t2) return null;
    const o4 = this.viewModel?.selectedResult, r6 = this._getSourceName(e9.source, e9.sourceIndex), i6 = t2.filter(((e10) => e10 !== o4)).map(((e10) => this._renderListItem(e10)));
    return n3("calcite-list", { label: r6 }, s5 ? n3("calcite-list-item-group", { heading: r6, key: `group-${e9.sourceIndex}` }, i6) : i6);
  }
  _selectResult(e9) {
    this.showMoreResultsOpen = false, this.viewModel?.select(e9);
  }
  _toggleShowMoreResults(e9) {
    this.showMoreResultsOpen = e9;
    const s5 = this.viewModel?.view?.popup;
    s5 && "reposition" in s5 && s5.reposition();
  }
  _getSourceName(e9, s5) {
    return s5 === X.ALL_INDEX ? this.messages.all : e9.name;
  }
};
r([m(), e2("esri/widgets/Search/t9n/Search")], m7.prototype, "messages", void 0), r([m()], m7.prototype, "showMoreResultsOpen", void 0), r([m()], m7.prototype, "viewModel", void 0), m7 = r([a2("esri.widgets.Search.SearchResultRenderer")], m7);
var a9 = m7;

// node_modules/@arcgis/core/widgets/Search.js
var C4 = class extends O {
  constructor(e9, o4) {
    super(e9, o4), this._currentLocationValue = `${this.id}-search-use-current-location`, this._autocompleteNode = null, this._focusAbortController = null, this._searchResultRenderer = new a9(), this._suggestController = null, this._searchController = null, this._lastSearchTerm = "", this._locateFailed = false, this._showNoResults = false, this.disabled = false, this.messages = null, this.messagesCommon = null, this.viewModel = new X(), this._renderSearchResultsContent = () => this._searchResultRenderer, r2(i.getLogger(this), "Search", "arcgis-search", { version: "4.33" }), this.addHandles([l((() => this.viewModel), ((e10) => this._searchResultRenderer.viewModel = e10), h), l((() => this.viewModel.results), (() => this._searchResultRenderer.showMoreResultsOpen = false)), l((() => this.viewModel?.defaultPopupTemplate), ((e10) => {
      e10 && (e10.content = this._renderSearchResultsContent);
    }), h)]);
  }
  loadDependencies() {
    return c({ autocomplete: () => import("./calcite-autocomplete-7AK36GMD.js"), "autocomplete-item-group": () => import("./calcite-autocomplete-item-group-JV2G52LL.js"), "autocomplete-item": () => import("./calcite-autocomplete-item-3NGPG2N3.js"), button: () => import("./calcite-button-4IPXP4IJ.js"), dropdown: () => import("./calcite-dropdown-HXULLHSW.js"), "dropdown-group": () => import("./calcite-dropdown-group-BHX74GX3.js"), "dropdown-item": () => import("./calcite-dropdown-item-OENAIGOV.js"), notice: () => import("./calcite-notice-I3FL54AY.js") });
  }
  destroy() {
    this._cancelQueries(), this._searchResultRenderer = u(this._searchResultRenderer), this._focusAbortController?.abort();
  }
  get _isDisabled() {
    const { state: e9 } = this.viewModel;
    return "disabled" === e9 || "loading" === e9 || this.disabled;
  }
  get _showCurrentLocation() {
    return this.locationEnabled && !this.searchTerm?.trim();
  }
  get _effectiveActiveMenu() {
    const { activeMenu: e9 } = this;
    return this._isDisabled ? "none" : "warning" === e9 ? "suggestion" : e9;
  }
  get activeMenu() {
    return "none";
  }
  set activeMenu(e9) {
    "warning" === e9 && a3(i.getLogger(this), "activeMenu", "warning", { replacement: "Use the value 'suggestion' instead", version: "4.32", warnOnce: true }), this._overrideIfSome("activeMenu", e9);
  }
  get activeSource() {
    return this.viewModel?.activeSource;
  }
  get activeSourceIndex() {
    return this.viewModel.activeSourceIndex;
  }
  set activeSourceIndex(e9) {
    this.viewModel.activeSourceIndex = e9;
  }
  get allPlaceholder() {
    return this.viewModel.allPlaceholder;
  }
  set allPlaceholder(e9) {
    this.viewModel.allPlaceholder = e9;
  }
  get allSources() {
    return this.viewModel.allSources;
  }
  get autoNavigate() {
    return this.viewModel.autoNavigate;
  }
  set autoNavigate(e9) {
    this.viewModel.autoNavigate = e9;
  }
  get autoSelect() {
    return this.viewModel.autoSelect;
  }
  set autoSelect(e9) {
    this.viewModel.autoSelect = e9;
  }
  get defaultSources() {
    return this.viewModel.defaultSources;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e9) {
    this.viewModel.goToOverride = e9;
  }
  get icon() {
    return "search";
  }
  set icon(e9) {
    this._overrideIfSome("icon", e9);
  }
  get includeDefaultSources() {
    return this.viewModel.includeDefaultSources;
  }
  set includeDefaultSources(e9) {
    this.viewModel.includeDefaultSources = e9;
  }
  get label() {
    return this.messages?.widgetLabel ?? "";
  }
  set label(e9) {
    this._overrideIfSome("label", e9);
  }
  get locationEnabled() {
    return this.viewModel.locationEnabled;
  }
  set locationEnabled(e9) {
    this.viewModel.locationEnabled = e9;
  }
  get maxResults() {
    return this.viewModel.maxResults;
  }
  set maxResults(e9) {
    this.viewModel.maxResults = e9;
  }
  get maxSuggestions() {
    return this.viewModel.maxSuggestions;
  }
  set maxSuggestions(e9) {
    this.viewModel.maxSuggestions = e9;
  }
  get minSuggestCharacters() {
    return this.viewModel.minSuggestCharacters;
  }
  set minSuggestCharacters(e9) {
    this.viewModel.minSuggestCharacters = e9;
  }
  get popupEnabled() {
    return this.viewModel.popupEnabled;
  }
  set popupEnabled(e9) {
    this.viewModel.popupEnabled = e9;
  }
  get popupTemplate() {
    return this.viewModel.popupTemplate;
  }
  set popupTemplate(e9) {
    this.viewModel.popupTemplate = e9;
  }
  get portal() {
    return this.viewModel?.portal;
  }
  set portal(e9) {
    this.viewModel && (this.viewModel.portal = e9);
  }
  get resultGraphic() {
    return this.viewModel.resultGraphic;
  }
  set resultGraphic(e9) {
    this.viewModel.resultGraphic = e9;
  }
  get resultGraphicEnabled() {
    return this.viewModel.resultGraphicEnabled;
  }
  set resultGraphicEnabled(e9) {
    this.viewModel.resultGraphicEnabled = e9;
  }
  get results() {
    return this.viewModel.results;
  }
  get searchAllEnabled() {
    return this.viewModel.searchAllEnabled;
  }
  set searchAllEnabled(e9) {
    this.viewModel.searchAllEnabled = e9;
  }
  get searchTerm() {
    return this.viewModel.searchTerm;
  }
  set searchTerm(e9) {
    this.viewModel.searchTerm = e9;
  }
  get selectedResult() {
    return this.viewModel.selectedResult;
  }
  get sources() {
    return this.viewModel.sources;
  }
  set sources(e9) {
    this.viewModel.sources = e9;
  }
  get suggestions() {
    return this.viewModel.suggestions;
  }
  get suggestionsEnabled() {
    return this.viewModel.suggestionsEnabled;
  }
  set suggestionsEnabled(e9) {
    this.viewModel.suggestionsEnabled = e9;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e9) {
    this.viewModel.view = e9;
  }
  clear() {
    this._locateFailed = false, this.viewModel.clear();
  }
  focus() {
    this._handleFocus(), this._emitFocus();
  }
  blur() {
    this._autocompleteNode?.blur(), this._emitBlur();
  }
  async search(e9) {
    this._cancelQueries();
    const t2 = new AbortController(), { signal: o4 } = t2;
    this._searchController = t2;
    try {
      const s5 = await this.viewModel.search(e9, { signal: o4 });
      if (this._searchController !== t2) return;
      return s5?.numResults || (this._showNoResults = true, this.activeMenu = "suggestion"), this._searchController = null, s5;
    } catch (s5) {
      if (this._searchController !== t2) return;
      return void (this._searchController = null);
    }
  }
  async suggest(e9) {
    this._cancelSuggest();
    const t2 = new AbortController(), { signal: o4 } = t2;
    this._suggestController = t2;
    try {
      const s5 = await this.viewModel.suggest(e9, null, { signal: o4 });
      if (this._suggestController !== t2) return;
      return this._suggestController = null, s5?.numResults && (this.activeMenu = "suggestion", this._scrollToTopSuggestion()), s5;
    } catch (s5) {
      return this._suggestController !== t2 || (this._suggestController = null), null;
    }
  }
  render() {
    return n3("div", { class: this.classes(e5.base, e3.widget) }, n3("div", { class: e5.container }, this._renderSourcesMenu(), this._renderForm()));
  }
  _handleInputKeydown(e9) {
    "Tab" === e9.key && this._cancelSuggest();
  }
  _emitFocus() {
    this.emit("search-focus");
  }
  _emitBlur() {
    this.emit("search-blur");
  }
  async _handleFocus() {
    this._focusAbortController?.abort(), this._focusAbortController = new AbortController();
    const e9 = this._focusAbortController.signal;
    await d(R(e9)), this._autocompleteNode?.setFocus();
  }
  _renderSourcesMenu() {
    const { messages: e9, _isDisabled: t2, _effectiveActiveMenu: o4 } = this, { allSources: s5, searchAllEnabled: r6 } = this.viewModel;
    return s5.length > 1 ? n3("calcite-dropdown", { bind: this, class: e5.dropdown, disabled: t2, open: "source" === o4, overlayPositioning: "fixed", onCalciteDropdownClose: this._handleSourceClose, onCalciteDropdownOpen: this._handleSourceOpen, onCalciteDropdownSelect: this._handleSourceSelect }, n3("calcite-button", { appearance: "outline-fill", iconStart: "caret-down", kind: "neutral", label: e9.searchIn, slot: "trigger" }), n3("calcite-dropdown-group", { groupTitle: e9.searchIn }, r6 ? this._renderSource(X.ALL_INDEX) : null, s5.map(((e10, t3) => this._renderSource(t3))).toArray())) : null;
  }
  _renderUseCurrentLocation() {
    const { _currentLocationValue: e9 } = this;
    return n3("calcite-autocomplete-item", { heading: this.messages.useCurrentLocation, iconStart: "gps-on", key: e9, value: e9 });
  }
  _handleAutocompleteCreate(e9) {
    this._autocompleteNode = e9;
  }
  _handleCalciteAutocompleteTextInput(e9) {
    const t2 = e9.target.inputValue;
    t2 !== this.viewModel.searchTerm && (this.viewModel.searchTerm = t2, t2 || this.clear(), this.suggest());
  }
  _handleAutocompleteOpen() {
    this.activeMenu = "suggestion";
  }
  _handleAutocompleteClose() {
    "suggestion" === this.activeMenu && (this.activeMenu = "none");
  }
  _handleCalciteAutocompleteChange(e9) {
    const t2 = e9.target.value;
    if (t2 === this._currentLocationValue) return void this._useCurrentLocation();
    const o4 = JSON.parse(t2), s5 = this.viewModel.suggestions?.find((({ sourceIndex: e10 }) => e10 === o4.sourceIndex))?.results?.find((({ key: e10 }) => `${e10}` == `${o4.key}`));
    s5 && this.search(s5);
  }
  _renderAutocomplete() {
    const { _effectiveActiveMenu: e9, messages: t2, _isDisabled: o4 } = this, { maxInputLength: s5, placeholder: r6, searchTerm: i6, state: l8 } = this.viewModel, n13 = this.label ?? t2.searchButtonTitle ?? "";
    return n3("calcite-autocomplete", { afterCreate: this._handleAutocompleteCreate, autocomplete: "off", bind: this, class: e5.autocomplete, disabled: o4, icon: this.icon, inputValue: i6, label: n13, loading: "searching" === l8, maxLength: s5, name: this.id, onblur: this._emitBlur, onfocus: this._emitFocus, onkeydown: this._handleInputKeydown, open: "suggestion" === e9, overlayPositioning: "fixed", placeholder: r6, title: i6 ? "" : r6, onCalciteAutocompleteChange: this._handleCalciteAutocompleteChange, onCalciteAutocompleteClose: this._handleAutocompleteClose, onCalciteAutocompleteOpen: this._handleAutocompleteOpen, onCalciteAutocompleteTextChange: this._handleCalciteAutocompleteTextInput, onCalciteAutocompleteTextInput: this._handleCalciteAutocompleteTextInput }, this._renderSuggestions(), this._renderNotices());
  }
  _renderForm() {
    return n3("form", { bind: this, class: e5.form, disabled: this._isDisabled, key: e5.form, onsubmit: this._formSubmit, role: "search" }, this._renderAutocomplete());
  }
  _renderSuggestGroup(e9) {
    return e9.results?.map(((e10) => this._renderSuggestion(e10)));
  }
  _renderSuggestions() {
    const { suggestions: e9 } = this.viewModel;
    return this._showNoResults ? null : this._showCurrentLocation ? this._renderUseCurrentLocation() : e9?.map(((e10) => this._renderSuggestResults(e10)));
  }
  _renderSuggestResults(e9) {
    const { allSources: t2, activeSourceIndex: o4 } = this.viewModel, { sourceIndex: s5 } = e9, r6 = e9.results?.length, i6 = t2.length > 1 && o4 === X.ALL_INDEX, l8 = this._getSourceName(s5);
    return r6 && i6 ? n3("calcite-autocomplete-item-group", { heading: l8, key: `suggestion-group-${l8}-${s5}` }, this._renderSuggestGroup(e9)) : this._renderSuggestGroup(e9);
  }
  _renderSuggestion({ key: e9, sourceIndex: t2, text: o4 }) {
    const s5 = { key: e9, sourceIndex: t2 };
    return n3("calcite-autocomplete-item", { heading: o4 ?? this.messages.untitledResult, key: `suggestion_${e9}`, value: JSON.stringify(s5) });
  }
  _renderSource(e9) {
    const t2 = this._getSourceName(e9);
    return n3("calcite-dropdown-item", { "data-source-index": `${e9}`, key: `source-${t2}-${e9}`, selected: e9 === this.viewModel.activeSourceIndex }, t2);
  }
  _renderNoResultsWarning(e9) {
    const { messages: t2 } = this, o4 = e9 ? s3(t2.noResultsFoundForValue, { value: `"${e9}"` }) : t2.noResultsFound;
    return n3("calcite-notice", { icon: "exclamation-mark-triangle", key: "no-results-warning", kind: "warning", open: true, slot: "content-bottom" }, n3("div", { slot: "title" }, t2.noResults), n3("div", { slot: "message" }, o4));
  }
  _renderLocateError() {
    return n3("calcite-notice", { icon: "exclamation-mark-circle", key: "locate-warning", kind: "danger", open: true, slot: "content-bottom" }, n3("div", { slot: "message" }, this.messages.locateError));
  }
  _renderNotices() {
    return this._locateFailed ? this._renderLocateError() : this._showNoResults ? this._renderNoResultsWarning(this._lastSearchTerm ?? this.viewModel.searchTerm) : null;
  }
  async _useCurrentLocation() {
    this._cancelQueries();
    const e9 = new AbortController(), { signal: t2 } = e9;
    this._searchController = e9;
    try {
      await this.viewModel.searchNearby({ signal: t2 });
    } catch (o4) {
      b(o4) || (this._locateFailed = true, this.activeMenu = "suggestion");
    } finally {
      this._searchController = null;
    }
  }
  _handleSourceOpen() {
    this.activeMenu = "source";
  }
  _handleSourceClose() {
    "source" === this.activeMenu && (this.activeMenu = "none");
  }
  _handleSourceSelect(e9) {
    const t2 = e9.target.selectedItems[0].getAttribute("data-source-index");
    t2 && (this.viewModel.activeSourceIndex = parseInt(t2, 10));
  }
  _cancelSuggest() {
    this.activeMenu = "none", this._locateFailed = false, this._showNoResults = false, this._suggestController = e(this._suggestController);
  }
  _cancelQueries() {
    this._cancelSuggest(), this._searchController = e(this._searchController);
  }
  _scrollToTopSuggestion() {
    this._autocompleteNode?.scrollContentTo({ top: 0 });
  }
  _formSubmit(e9) {
    e9.preventDefault(), this.activeMenu = "none", this._lastSearchTerm = this.searchTerm, this.searchTerm && this.search();
  }
  _getSourceName(e9) {
    const { messages: t2 } = this, { allSources: o4 } = this.viewModel, s5 = o4.at(e9);
    return e9 === X.ALL_INDEX ? t2.all : s5?.name || t2.untitledSource;
  }
};
r([m()], C4.prototype, "_locateFailed", void 0), r([m()], C4.prototype, "_showNoResults", void 0), r([m()], C4.prototype, "_isDisabled", null), r([m()], C4.prototype, "_showCurrentLocation", null), r([m()], C4.prototype, "_effectiveActiveMenu", null), r([m()], C4.prototype, "activeMenu", null), r([m({ readOnly: true })], C4.prototype, "activeSource", null), r([m()], C4.prototype, "activeSourceIndex", null), r([m()], C4.prototype, "allPlaceholder", null), r([m({ readOnly: true })], C4.prototype, "allSources", null), r([m()], C4.prototype, "autoNavigate", null), r([m()], C4.prototype, "autoSelect", null), r([m({ readOnly: true })], C4.prototype, "defaultSources", null), r([m()], C4.prototype, "disabled", void 0), r([m()], C4.prototype, "goToOverride", null), r([m()], C4.prototype, "icon", null), r([m()], C4.prototype, "includeDefaultSources", null), r([m()], C4.prototype, "label", null), r([m()], C4.prototype, "locationEnabled", null), r([m()], C4.prototype, "maxResults", null), r([m()], C4.prototype, "maxSuggestions", null), r([m(), e2("esri/widgets/Search/t9n/Search")], C4.prototype, "messages", void 0), r([m(), e2("esri/t9n/common")], C4.prototype, "messagesCommon", void 0), r([m()], C4.prototype, "minSuggestCharacters", null), r([m()], C4.prototype, "popupEnabled", null), r([m()], C4.prototype, "popupTemplate", null), r([m()], C4.prototype, "portal", null), r([m()], C4.prototype, "resultGraphic", null), r([m()], C4.prototype, "resultGraphicEnabled", null), r([m({ readOnly: true })], C4.prototype, "results", null), r([m()], C4.prototype, "searchAllEnabled", null), r([m()], C4.prototype, "searchTerm", null), r([m({ readOnly: true })], C4.prototype, "selectedResult", null), r([m()], C4.prototype, "sources", null), r([m({ readOnly: true })], C4.prototype, "suggestions", null), r([m()], C4.prototype, "suggestionsEnabled", null), r([m()], C4.prototype, "view", null), r([e4(["search-complete", "search-clear", "search-start", "select-result", "suggest-start", "suggest-complete"]), m({ type: X })], C4.prototype, "viewModel", void 0), C4 = r([a2("esri.widgets.Search")], C4);
var f9 = C4;
export {
  f9 as default
};
//# sourceMappingURL=@arcgis_core_widgets_Search.js.map
