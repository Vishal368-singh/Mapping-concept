import {
  p
} from "./chunk-S3AR7JPP.js";
import {
  $,
  P
} from "./chunk-B5FZHKFL.js";
import "./chunk-NSRXHIXQ.js";
import "./chunk-NCWIYJUO.js";
import {
  o
} from "./chunk-OCWOGVIP.js";
import "./chunk-FCHFP4ZB.js";
import "./chunk-WSMONZ65.js";
import {
  E,
  c,
  i,
  s
} from "./chunk-ETWYHKOD.js";
import "./chunk-PPURGUUD.js";
import "./chunk-JID2PGFV.js";
import "./chunk-N77BULFI.js";
import "./chunk-NEIJCC5O.js";
import "./chunk-UMUW6RKM.js";
import "./chunk-AIZOVCLV.js";
import "./chunk-FV6ZNHFI.js";
import "./chunk-IDSV3U3M.js";
import "./chunk-RKF6WUZT.js";
import "./chunk-3LTBYQQS.js";
import "./chunk-YXZLRZNZ.js";
import "./chunk-YVNZKO6I.js";
import "./chunk-27M3EN5Y.js";
import "./chunk-P5FXO7WR.js";
import "./chunk-UCCG5WDW.js";
import "./chunk-WAXP6XIO.js";
import "./chunk-IVKSCXGN.js";
import "./chunk-YYLIW24Q.js";
import "./chunk-B7BH33JH.js";
import "./chunk-DDNC6A36.js";
import "./chunk-ZJQPHR3K.js";
import "./chunk-T6TMEQJ7.js";
import "./chunk-5DBBCQVU.js";
import "./chunk-MNW46TV4.js";
import "./chunk-JSWMPOBX.js";
import "./chunk-SSVCVBFL.js";
import "./chunk-6JCZVSRM.js";
import "./chunk-LLGOMKTE.js";
import "./chunk-5KQMTKIZ.js";
import "./chunk-PYBAZ6YE.js";
import "./chunk-YC5GI5YQ.js";
import "./chunk-RJI4N3LT.js";
import "./chunk-QSG5WGQI.js";
import "./chunk-X26VPODZ.js";
import "./chunk-XNYPRDKK.js";
import "./chunk-CM3TIXEV.js";
import "./chunk-Y4BWIIWH.js";
import "./chunk-3TN73U7K.js";
import "./chunk-SL5A7INV.js";
import "./chunk-VHPBXBDE.js";
import "./chunk-6ACTD4UJ.js";
import "./chunk-5REYU5G2.js";
import "./chunk-YO7WHZZ7.js";
import "./chunk-OUZJZB6I.js";
import "./chunk-JNYZ3I5R.js";
import "./chunk-Q6OL33PY.js";
import "./chunk-TJPLHZCD.js";
import "./chunk-KLFJ5V5G.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/layers/save/groupLayerUtils.js
var u = "Group Layer";
var c2 = "group-layer-save";
var l = "group-layer-save-as";
var p2 = E.GROUP_LAYER_MAP;
function m(e) {
  return { isValid: "group" === e.type, errorMessage: "Layer.type should be 'group'" };
}
function y(e) {
  return { isValid: s(e, p2), errorMessage: `Layer.portalItem.typeKeywords should have '${p2}'` };
}
function f(e, r) {
  return { ...o(e, "web-map", true), initiator: r };
}
function v(e) {
  const r = e.layerJSON;
  return Promise.resolve(r && Object.keys(r).length ? r : null);
}
async function d(e, r) {
  r.title ||= e.title, c(r, E.METADATA), i(r, p2);
}
async function I(r, t) {
  return P({ layer: r, itemType: u, validateLayer: m, validateItem: y, createJSONContext: (e) => f(e, r), createItemData: v, errorNamePrefix: c2, saveResources: async (e, t2) => (r.sourceIsPortalItem || await e.removeAllResources().catch((() => {
  })), p(r.resourceReferences, t2)) }, t);
}
async function g(e, t, o2) {
  return $({ layer: e, itemType: u, validateLayer: m, createJSONContext: (r) => f(r, e), createItemData: v, errorNamePrefix: l, newItem: t, setItemProperties: d, saveResources: (r, t2) => p(e.resourceReferences, t2) }, o2);
}
export {
  I as save,
  g as saveAs
};
//# sourceMappingURL=groupLayerUtils-4FMSZHDU.js.map
